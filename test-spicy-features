#! /usr/bin/env bash

set -euo pipefail

BASE="$(cd "$(dirname "$0")" && pwd)"

TMP=/tmp/$(basename "$0").$$
DIAG=${TMP}/diag.log
OUTPUT=${TMP}/output.log

trap 'rm -rf ${TMP}' EXIT

mkdir "${TMP}"
cd "${TMP}" || exit 1

for i in zeek spicyz; do
    if ! command -v "$i" >/dev/null; then
        echo "no $i in PATH" >&2
        exit 1
    fi
done

function build_and_test {
    description="$1"
    shift

    rm -rf spicy-test

    ZKG_DEFAULT_TEMPLATE=${BASE} zkg create --packagedir spicy-test "$@"

    (cd spicy-test &&
        (rm -rf build && mkdir build && cd build && cmake .. && make -j 4) && \
        (cd testing && echo "--- ${description}" >>"${OUTPUT}" && rm -f "${DIAG}" && btest -f "${DIAG}" -dj; cat "${DIAG}" >>"${OUTPUT}"))
}

function show_failures {
    echo
    echo "=== TEST SUMMARY ==="
    echo
    cat "${OUTPUT}"
}

# Pseudo-randomize the names so the we catch if one of the templates happens to
# hardcode a value rather than substituting it.
rnd=_$$

build_and_test "Packet Analyzer" \
    --features=spicy-packet-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var unit=MyPacket${rnd}

build_and_test "File Analyzer" \
    --features=spicy-file-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var unit=MyFile${rnd}

build_and_test "Protocol Analyzer - UDP - one unit" \
    --features=spicy-protocol-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var protocol=Udp \
    --user-var unit_orig=MyMessage${rnd} \
    --user-var unit_resp=MyMessage${rnd}

build_and_test "Protocol Analyzer - UDP - two units" \
    --features=spicy-protocol-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var protocol=Udp \
    --user-var unit_orig=MyRequest${rnd} \
    --user-var unit_resp=MyResponder${rnd} \

build_and_test "Protocol Analyzer - TCP - one unit" \
    --features=spicy-protocol-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var protocol=Tcp \
    --user-var unit_orig=MyMessage${rnd} \
    --user-var unit_resp=MyMessage${rnd}

build_and_test "Protocol Analyzer - TCP - two units" \
    --features=spicy-protocol-analyzer \
    --user-var name=MyPackage${rnd} \
    --user-var analyzer=MyAnalyzer${rnd} \
    --user-var protocol=Tcp \
    --user-var unit_orig=MyRequest${rnd} \
    --user-var unit_resp=MyResponder${rnd} \

show_failures
exit 0
